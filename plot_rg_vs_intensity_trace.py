#!/usr/bin/python
d = """
=============================================

Analysis of small-angle X-ray scattering data.

The script allows to plot radius of gyration .vs intensity trace plot

The input file is provided as a .csv file generated by Foxtrot (SOLEIL SAXS analysis software).

Before use:
- Install pandas, numpy, matplotlib.

Marius Kausas					   2019 12 05

=============================================
"""


import argparse
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt


def load_rg_intensity_trace_csv(path_to_csv, delimiter=";"):
    """ Load R(g) vs intensity trace .csv produced by Foxtrot."""
    
    df = pd.read_csv(path_to_csv, delimiter=delimiter)
    i0 = df["I0"].values
    rg = df["Rg"].values
    
    return i0, rg


def plot_rg_intensity_trace(i0, rg, frame_range, selected_frames): 
    """ Plot R(g) vs intensity trace .csv produced by Foxtrot."""
    
    fs = 22
    tick_params = {"labelsize": fs}

    fig, ax1 = plt.subplots(figsize=(10,6))
    
    frames = np.arange(i0.shape[0])
    
    ax1.plot(frames, i0, color="tab:grey", linewidth=5, marker="o", markersize=10)
    ax1.set_ylim(0, i0.max() + 0.005)
    ax1.tick_params(**tick_params)

    ax2 = ax1.twinx()
    ax2.scatter(frames, rg, color="tab:red", s=100)

    ax2.vlines(selected_frames[0] - 0.5,
               rg[selected_frames[0]],
               rg[selected_frames[0]] + 10,
               linewidth=5,
               color="tab:red")
    ax2.vlines(selected_frames[1] - 0.5,
               rg[selected_frames[1]],
               rg[selected_frames[1]] + 10,
               linewidth=5,
               color="tab:red")

    ax2.set_xlim(frame_range[0], frame_range[1])
    ax2_ylim = np.ceil(rg[selected_frames[0]]) // 10
    ax2.set_ylim(0, ax2_ylim * 20)

    ax2.tick_params(**tick_params)

    plt.tight_layout()

    plt.savefig("rg_vs_intensity_trace_plot.png", dpi=300)
    plt.close()


if __name__ == "__main__":

	# Argument parser

	argparser = argparse.ArgumentParser(formatter_class=argparse.RawDescriptionHelpFormatter, description=d)
	argparser.add_argument("-csv", type=str, help="Path to Rg vs intensity .csv file", required=True)
	argparser.add_argument("-frame_start", type=int, help="Starting frame to plot", required=True)
	argparser.add_argument("-frame_end", type=int, help="Ending frame to plot", required=True)
	argparser.add_argument("-selected_start", type=int, help="Selected starting frame", required=True)
	argparser.add_argument("-selected_end", type=int, help="Selected ending frame", required=True)

	# Parse arguments

	args = argparser.parse_args()
	path_to_csv = args.csv
	frame_start = args.frame_start
	frame_end = args.frame_end
	selected_start = args.selected_start
	selected_end = args.selected_end

	# Plot Rg vs intensity trace

	i0, rg = load_rg_intensity_trace_csv(path_to_csv = path_to_csv)
	plot_rg_intensity_trace(i0, rg, [frame_start, frame_end], [selected_start, selected_end])
